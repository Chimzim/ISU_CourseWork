package cs228hw2.test;

public class Tohelp {
	AmusingPreciseNumber Number2 = new AmusingPreciseNumber(numb1);
	
	if(myNumbPrior.size() > Number2.myNumbPrior.size()) {
		while(Number2.myNumbPrior.size() != myNumbPrior.size()) {
			Number2.myNumbPrior.add(0, 0);
		}
	}
	if(myNumbPrior.size() < Number2.myNumbPrior.size()) {
		while(myNumbPrior.size() != Number2.myNumbPrior.size()) {
			myNumbPrior.add(0,0);
		}
	}
	if(myNumbAfter.size() > Number2.myNumbAfter.size()) {
		while(myNumbAfter.size() != Number2.myNumbAfter.size()) {
			Number2.myNumbAfter.add(0,0);
		}
	}
	if(myNumbAfter.size() < Number2.myNumbAfter.size()) {
		while(Number2.myNumbAfter.size() != myNumbAfter.size()) {
			myNumbAfter.add(0,0);
		}
	}
	//where the subtraction starts
	if(myNumbPrior.get(0) < 0 && Number2.myNumbPrior.get(0) > 0) {
		myNumbPrior.set(0, myNumbPrior.get(0)*-1);
		for(int i = myNumbAfter.size()-1; i >= 0; i--) {
			myNumbAfter.set(i, myNumbAfter.get(i)+Number2.myNumbAfter.get(i));
			if(myNumbAfter.get(i) >= 10 && i > 0) {
				myNumbAfter.set(i, myNumbAfter.get(i)%10);
				myNumbAfter.set(i-1, myNumbAfter.get(i)+1);
			}
			else if(myNumbAfter.get(i) >= 10 && i == 0) {
				myNumbAfter.set(i, myNumbAfter.get(i)%10);
				myNumbPrior.set(myNumbPrior.get(myNumbPrior.size()-1), myNumbPrior.get(myNumbPrior.size()-1)+1);
			}
		}
			for(int i = myNumbPrior.size()-1; i >= 0; i--) {
				myNumbPrior.set(i, myNumbPrior.get(i)+Number2.myNumbPrior.get(i));
				if(myNumbPrior.get(i) >= 10 && i > 0) {
					myNumbPrior.set(i, myNumbPrior.get(i)%10);
					myNumbPrior.set(i-1, myNumbPrior.get(i)+1);
				}
				else if(myNumbPrior.get(i) >= 10 && i == 0) {
					myNumbPrior.set(i, myNumbPrior.get(i)%10);
					myNumbPrior.add(0,1);
				}
			}
			myNumbPrior.set(0, myNumbPrior.get(0)*-1);
		}

	else if(myNumbPrior.get(0) > 0 && Number2.myNumbPrior.get(0) < 0) {
		Number2.myNumbPrior.set(0, Number2.myNumbPrior.get(0)*-1);
		for(int i = myNumbAfter.size()-1; i >= 0; i--) {
			myNumbAfter.set(i, myNumbAfter.get(i)+Number2.myNumbAfter.get(i));
			if(myNumbAfter.get(i) >= 10 && i > 0) {
				myNumbAfter.set(i, myNumbAfter.get(i)%10);
				myNumbAfter.set(i-1, myNumbAfter.get(i)+1);
			}
			else if(myNumbAfter.get(i) >= 10 && i == 0) {
				myNumbAfter.set(i, myNumbAfter.get(i)%10);
				myNumbPrior.set(myNumbPrior.get(myNumbPrior.size()-1), myNumbPrior.get(myNumbPrior.size()-1)+1);
			}
		}
		for(int i = myNumbPrior.size()-1; i >= 0; i--) {
			myNumbPrior.set(i, myNumbPrior.get(i)+Number2.myNumbPrior.get(i));
			if(myNumbPrior.get(i) >= 10 && i > 0) {
				myNumbPrior.set(i, myNumbPrior.get(i)%10);
				myNumbPrior.set(i-1, myNumbPrior.get(i)+1);
			}
			else if(myNumbPrior.get(i) >= 10 && i == 0 ) {
				myNumbPrior.set(i, myNumbPrior.get(i)%10);
				myNumbPrior.add(0,1);
			}
		}
	}
	else if(myNumbPrior.get(0) > 0 && Number2.myNumbPrior.get(0) > 0) {
		if(myNumbPrior.get(0) > Number2.myNumbPrior.get(0)) {
			for(int i = myNumbAfter.size()-1; i >= 0; i--) {
				if(Number2.myNumbAfter.get(i) > myNumbAfter.get(i) && i > 0) {
					myNumbAfter.set(i, myNumbAfter.get(i)+10);
					myNumbAfter.set(i-1, myNumbAfter.get(i-1)-1);
				}
				else if(Number2.myNumbAfter.get(i) > myNumbAfter.get(i) && i == 0) {
					myNumbAfter.set(i, myNumbAfter.get(i)+10);
					myNumbPrior.set(myNumbPrior.size()-1, myNumbPrior.get(myNumbPrior.size()-1)-1);
				}
				myNumbAfter.set(i, myNumbAfter.get(i)-Number2.myNumbAfter.get(i));
			}
			for(int i = myNumbPrior.size()-1; i >= 0; i--) {
				if(Number2.myNumbPrior.get(i) > myNumbPrior.get(i)) {
					myNumbPrior.set(i, myNumbPrior.get(i)+10);
					myNumbPrior.set(i-1, myNumbPrior.get(i-1)-1);
				}
				myNumbPrior.set(i, myNumbPrior.get(i) - Number2.myNumbPrior.get(i));
			}
		}
		else { 
			for(int i = myNumbAfter.size()-1; i >= 0; i--) {
				if(Number2.myNumbAfter.get(i) < myNumbAfter.get(i) && i > 0) {
					Number2.myNumbAfter.set(i, Number2.myNumbAfter.get(i)+10);
					Number2.myNumbAfter.set(i-1, Number2.myNumbAfter.get(i-1)-1);
				}
				else if(Number2.myNumbAfter.get(i) < myNumbAfter.get(i) && i == 0) {
					Number2.myNumbAfter.set(i, Number2.myNumbAfter.get(i)+10);
					Number2.myNumbPrior.set(Number2.myNumbPrior.size()-1, Number2.myNumbPrior.get(Number2.myNumbPrior.size()-1)-1);
				}
				myNumbAfter.set(i, Number2.myNumbAfter.get(i)-myNumbAfter.get(i));
			}
			for(int i = myNumbPrior.size()-1; i >= 0; i--) {
				if(Number2.myNumbPrior.get(i) > myNumbPrior.get(i)) {
					Number2.myNumbPrior.set(i, Number2.myNumbPrior.get(i)+10);
					Number2.myNumbPrior.set(i-1, Number2.myNumbPrior.get(i-1)-1);
				}
				myNumbPrior.set(i, Number2.myNumbPrior.get(i) - myNumbPrior.get(i));
			}
			}
		}
	else if(myNumbPrior.get(0) < 0 && Number2.myNumbPrior.get(0) < 0) {
		myNumbPrior.set(0, myNumbPrior.get(0)*-1);
		Number2.myNumbPrior.set(0, Number2.myNumbPrior.get(0)*-1);
		if(myNumbPrior.get(0) > Number2.myNumbPrior.get(0)) {
			for(int i = myNumbAfter.size()-1; i >= 0; i--) {
				if(Number2.myNumbAfter.get(i) > myNumbAfter.get(i) && i > 0) {
					myNumbAfter.set(i, myNumbAfter.get(i)+10);
					myNumbAfter.set(i-1, myNumbAfter.get(i-1)-1);
				}
				else if(myNumbAfter.get(i) > myNumbAfter.get(i) && i == 0) {
					myNumbAfter.set(i, myNumbAfter.get(i)+10);
					myNumbPrior.set(myNumbPrior.size()-1, myNumbPrior.get(myNumbPrior.size()-1)-1);
				}
				myNumbAfter.set(i, myNumbAfter.get(i)-Number2.myNumbAfter.get(i));	
		}
			for(int i = myNumbPrior.size()-1; i >= 0; i--) {
				if(Number2.myNumbPrior.get(i) > myNumbPrior.get(i)) {
					myNumbPrior.set(i, myNumbPrior.get(i)+10);
					myNumbPrior.set(i-1, myNumbPrior.get(i-1)-1);
				}
				myNumbPrior.set(i, myNumbPrior.get(i) - Number2.myNumbPrior.get(i));
			}
			myNumbPrior.set(0, myNumbPrior.get(0)*-1);
		}
		else {
			for(int i = myNumbAfter.size()-1; i >= 0; i--) {
				if(Number2.myNumbAfter.get(i) < myNumbAfter.get(i) && i > 0) {
					Number2.myNumbAfter.set(i, Number2.myNumbAfter.get(i)+10);
					Number2.myNumbAfter.set(i-1, Number2.myNumbAfter.get(i-1)-1);
				}
				else if(Number2.myNumbAfter.get(i) < myNumbAfter.get(i) && i == 0) {
					Number2.myNumbAfter.set(i, Number2.myNumbAfter.get(i)+10);
					Number2.myNumbPrior.set(Number2.myNumbPrior.size()-1, Number2.myNumbPrior.get(Number2.myNumbPrior.size()-1)-1);
				}
				myNumbAfter.set(i, Number2.myNumbAfter.get(i)-myNumbAfter.get(i));
			}
			for(int i = myNumbPrior.size()-1; i >= 0; i--) {
				if(Number2.myNumbPrior.get(i) > myNumbPrior.get(i)) {
					Number2.myNumbPrior.set(i, Number2.myNumbPrior.get(i)+10);
					Number2.myNumbPrior.set(i-1, Number2.myNumbPrior.get(i-1)-1);
				}
				myNumbPrior.set(i, Number2.myNumbPrior.get(i) - myNumbPrior.get(i));
			}
		}
	}
}
